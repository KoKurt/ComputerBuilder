@page "/login"
@using ComputerBuilder.DataModels.CustomModels;
@using ComputerBuilder.Admin.Services;
@inject IAdminPanelService adminPanelService;
@inject NavigationManager navManager;
@inject ProtectedSessionStorage sessionStorage;

@*<style>
    body {
        background: linear-gradient(90deg, #414141,#000000 );
    }
    .loginBox {
        font-family: 'Open Sans', sans-serif;
        margin: 0 auto 0 auto;
        width: 100%;
        text-align: center;
        margin: 20px 0px 20px 0px;
    }

    p {
        font-size: 12px;
        text-decoration: none;
        color: #ffffff;
    }

    h1 {
        font-size: 1.5em;
        color: Black;
    }

    .box {
        background: linear-gradient(90deg, #ffa31a, #FBB034);
        width: 300px;
        margin: 0 auto 0 auto;
        padding: 0px 0px 10px 0px;
        border: black 4px solid;
        border-radius: 6px;
    }

    .email {
        background: white;
        border: #ccc 1px solid;
        border-bottom: #ccc 2px solid;
        padding: 8px;
        width: 250px;
        color: #525252;
        margin-top: 10px;
        margin-bottom: 10px;
        font-size: 1em;
        border-radius: 4px;
    }
    .password
    {
        border-radius: 4px;
        background:white;
        border: #ccc 1px solid;
        padding:8px;
        width: 250px;
        font-size: 1em; 
    }
</style>
*@

<style>

    /*import "compass/css3";*/

    * {
        box-sizing: border-box;
    }

    body {
        font-family: "HelveticaNeue-Light","Helvetica Neue Light","Helvetica Neue",Helvetica,Arial,"Lucida Grande",sans-serif;
        color: white;
        font-size: 12px;
        background: linear-gradient(90deg, #000000,#756213,#FFBD33 );
        /*url(/images/classy_fabric.png);*/
    }

    form {
        background: #111;
        width: 300px;
        margin: 30px auto;
        border-radius: 20px;
        border: 1px solid #191919;
        overflow: hidden;
        top: 140px;
        position: relative;
        box-shadow: 0 5px 10px 5px rgba(0,0,0,0.2);
    }

        form:after {
            content: "";
            display: block;
            position: absolute;
            height: 1px;
            width: 100px;
            left: 20%;
            background: linear-gradient(left, #111, #444, #b6b6b8, #444, #111);
            top: 0;
        }

        form:before {
            content: "";
            display: block;
            position: absolute;
            width: 8px;
            height: 5px;
            border-radius: 50%;
            left: 34%;
            top: -7px;
            box-shadow: 0 0 6px 4px black;
        }

    .inset {
        padding: 20px;
        border-top: 1px solid #19191a;
    }

    form h1 {
        font-size: 18px;
        text-shadow: 0 1px 0 black;
        text-align: center;
        padding: 15px 0;
        border-bottom: 1px solid rgba(0,0,0,1);
        position: relative;
    }

        form h1:after {
            content: "";
            display: block;
            width: 250px;
            height: 100px;
            position: absolute;
            top: 0;
            left: 50px;
            pointer-events: none;
            transform: rotate(70deg);
            background: linear-gradient(50deg, rgba(255,255,255,0.15), rgba(0,0,0,0));
        }

    label {
        color: #666;
        display: block;
        padding-bottom: 9px;
    }

    input[type=text],
    input[type=password] {
        width: 100%;
        padding: 8px 5px;
        background: linear-gradient(#1f2124, #27292c);
        border: 1px solid #222;
        box-shadow: 0 1px 0 rgba(255,255,255,0.1);
        border-radius: 0.3em;
        margin-bottom: 20px;
    }

    label[for=remember] {
        color: white;
        display: inline-block;
    }

    input[type=checkbox] {
        display: inline-block;
    }

    .p-container {
        padding: 0 20px 20px 20px;
    }

        .p-container:after {
            clear: both;
            display: table;
            content: "";
        }

        .p-container span {
            display: block;
            float: left;
            color: #0d93ff;
            padding-top: 8px;
        }

    #login {
        padding: 5px 20px;
        border: 1px solid rgba(0,0,0,0.4);
        text-shadow: 0 -1px 0 rgba(0,0,0,0.4);
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 10px 10px rgba(255,255,255,0.1);
        border-radius: 0.3em;
        background: #ff9900;
        color: black;
        height: 40px;
        width: 40%;
        font-weight: bold;
        cursor: pointer;
        font-size: 13px;
        text-align: center;
    }

    input[type=submit]:hover {
        box-shadow: inset 0 1px 0 rgba(255,255,255,0.3), inset 0 -10px 10px rgba(255,255,255,0.1);
    }

    input[type=text]:hover,
    input[type=password]:hover,
    label:hover ~ input[type=text],
    label:hover ~ input[type=password] {
        background: #27292c;
    }

    #logo {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

</style>


<div style="min-height:400px;">
    <div class="loginBox">
    <div class="box">
    <br />

            @if (loginModel != null)
    {
    <EditForm Model="@loginModel" OnValidSubmit="Login_Click"> 
        <DataAnnotationsValidator />


         <img src="css/Logo.png" id="logo" />
    <div class="inset">
        <div>
            <label for="email">EMAIL ADDRESS</label>
                            <input type="text" name="email" id="email" style="color:#ff9900;" @bind-value="loginModel.EmailId" autocomplete="off">
        </div>
        <div>
            <label for="password">PASSWORD</label>
            <input type="password" name="password" style="color:#ff9900;" @bind-value="loginModel.Password">
        </div>
    
    </div>
    <div class="p-container" style="text-align:center;">
    <input type="submit" id="login" readonly value="Login">

                        <br />
                        <br />
                        <p style="color: #e52e50;">
                            <h1> @alertMessage </h1>
                        </p>
    </div>

      @*  <InputText type="email" name="email" class="email" placeholder="email" @bind-Value="loginModel.EmailId" autocomplete="off"/>
        <ValidationMessage For="@(() => loginModel.EmailId)" />
       <InputText type="password" name="password" class="password" placeholder="password" @bind-Value="loginModel  .Password"/>
       <ValidationMessage For="@(() => loginModel.Password)"/>

        <br /> 
        <br />

            <input type="submit" class="btn-primary" value="Login" />*@
        </EditForm>
    }
        </div>
        <div>
              
        </div>
       </div>
</div>
@code {

    [CascadingParameter]
    public EventCallback notify { get; set; }

    public LoginModel loginModel { get; set; }
    public string alertMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        loginModel = new LoginModel();
        return base.OnInitializedAsync();
    }

    private async Task Login_Click()
    {
        var response =  await adminPanelService.AdminLogin(loginModel);
        if (response.Status == true)
        {
            var user_response = response.Message.Split("|");
            await sessionStorage.SetAsync("adminKey", user_response[0]);
            await sessionStorage.SetAsync("adminName", user_response[1]);
            await sessionStorage.SetAsync("adminEmail", user_response[2]);
            await notify.InvokeAsync();
            navManager.NavigateTo("/");
        }
        else 
        {
            alertMessage = response.Message;
        }


    }
}